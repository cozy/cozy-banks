{
  "name": "cozy-banks",
  "main": "src/main.jsx",
  "scripts": {
    "analyze": "COZY_SCRIPTS_ANALYZER=true yarn build",
    "build": "npm run build:browser && npm run build:services",
    "build:browser": "NODE_ENV=${NODE_ENV:-browser:production} npm run commons:build",
    "build:mobile": "NODE_ENV=mobile:production npm run commons:build -- --env.target=mobile",
    "build:mobile:hot": "npm run util:check-dev-server && HOT_RELOAD=1 NODE_ENV=mobile:development npm run commons:build -- --env.target=mobile",
    "check-locales": "yarn cs check-locales",
    "clean:browser": "rm -rf build/*",
    "clean:mobile": "rm -rf src/targets/mobile/www",
    "commons:build": "webpack --config webpack.config.js --bail",
    "commons:watch": "webpack --config webpack.config.js --watch --progress",
    "commons:start": "HOT_RELOAD=1 webpack-dev-server --progress --config webpack.config.js --port 8282 --inline --hot",
    "deploy": "yarn cs deploy",
    "cozyPublish": "cozy-app-publish --token $REGISTRY_TOKEN --prepublish downcloud --postpublish mattermost --space banks",
    "uploadStaticFiles": "babel-node ./scripts/upload-static-files.js",
    "prebuild:browser": "npm run clean:browser",
    "prebuild:mobile": "npm run clean:mobile",
    "prewatch:mobile": "npm run clean:mobile",
    "lint": "npm-run-all --parallel 'lint:*'",
    "lint:js": "eslint --fix 'config/**.js' 'src/**/*.js' 'src/**/*.jsx' 'test/**/*.js'",
    "lint:js:changes": "git diff --name-only master..HEAD | grep -E 'jsx?$' | xargs ls -d 2>/dev/null | xargs yarn eslint --fix",
    "lint:css": "stylint src/styles --config node_modules/cozy-scripts/config/.stylintrc",
    "stack:docker": "docker run --rm -it -p 8080:8080 -p 8025:8025 -v \"$(pwd)/build/\":/data/cozy-app/banks cozy/cozy-app-dev",
    "test": "NODE_ICU_DATA=node_modules/full-icu jest",
    "test:changes": "git diff --name-only master..HEAD | grep -E 'jsx?$' | xargs yarn test --bail --findRelatedTests",
    "test:e2e": "yarn test:e2e:onOperationOrBillCreate && yarn test:e2e:alerts",
    "test:e2e:onOperationOrBillCreate": "node test/e2e/onOperationOrBillCreate.js",
    "test:e2e:alerts": "env JEST_PROJECT=e2e yarn jest",
    "test:e2e:alerts-existing-cozy": "BABEL_ENV=cli babel-node --ignore /some-fake-path test/e2e/alerts-existing-cozy.js",
    "check-fixtures": "node scripts/check-fixtures.js",
    "find-circular-dependencies": "madge -b src/ --webpack-config webpack.config.js -c --extensions js,jsx src/main.jsx",
    "posttest": "yarn find-circular-dependencies",
    "start": "npm run start:browser",
    "start:browser": "NODE_ENV=browser:development npm run commons:start",
    "watch:mobile": "NODE_ENV=mobile:development npm run commons:watch -- --env.target=mobile",
    "util:check-dev-server": "[[ $DEV_HOST == '' ]] && echo 'Please set DEV_HOST for hot reload on mobile (ex: export DEV_HOST=192.168.1.36)' && exit 1 || exit 0",
    "start:mobile": "npm run util:check-dev-server && NODE_ENV=mobile:development npm run commons:start",
    "watch:mobile:production": "NODE_ENV=mobile:production npm run commons:watch -- --env.target=mobile",
    "serve:mobile": "(cd src/targets/mobile/www && http-server -p 8005)",
    "mobile:icon": "(cd src/targets/mobile && splashicon-generator --imagespath='./res/model' && cp ./res/model/splash.png ./res/screens/ios/Default@2x~universal~anyany.png)",
    "mobile:prepare": "(cd src/targets/mobile && cordova prepare && bundle install) && if [[ $(uname) == 'Darwin' ]] ; then npm run ios:install_pods ; fi",
    "mobile:clean": "(cd src/targets/mobile && rm -rf package.json node_modules platforms plugins)",
    "mobile:build": "npm run build:mobile && npm run mobile:clean && npm run mobile:prepare",
    "android:run": "(cd src/targets/mobile && cordova run android --device)",
    "android:run:emulator": "(cd src/targets/mobile && cordova run android --emulator)",
    "android:screenshots": "cd src/targets/mobile && bundle exec fastlane android screenshots",
    "android:package": "(cd src/targets/mobile && cordova build android --release)",
    "android:build": "npm run mobile:build && npm run android:package",
    "android:sign": "cd src/targets/mobile && apksigner sign --ks keys/android/cozy-banks-release-key.jks --out build/android/cozy-banks.apk platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk",
    "android:autosign": "(cd src/targets/mobile && apksigner sign --key-pass pass:$ANDROID_KEY_PASS_PASSWORD --ks-pass pass:$ANDROID_KS_PASS_PASSWORD --ks keys/android/cozy-banks-release-key.jks --out build/android/cozy-banks.apk platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk)",
    "android:deploy": "cd src/targets/mobile && bundle exec fastlane android deploy",
    "android:publish": "npm run android:build && npm run android:sign && npm run android:deploy",
    "ios:install_pods": "cd src/targets/mobile/platforms/ios && env COCOAPODS_DISABLE_STATS=true pod install",
    "ios:run": "cd src/targets/mobile && cordova run ios --buildFlag='-UseModernBuildSystem=0' --device",
    "ios:open_project": "open src/targets/mobile/platforms/ios/Cozy\\ Banks.xcworkspace/",
    "ios:run:emulator": "cd src/targets/mobile && cordova run ios --buildFlag='-UseModernBuildSystem=0' --emulator",
    "ios:screenshots": "cd src/targets/mobile && bundle exec fastlane ios screenshots",
    "ios:deploy": "cd src/targets/mobile/platforms/ios && pod install && cd ../.. && bundle exec fastlane ios deploy",
    "ios:publish": "npm run mobile:build && npm run ios:deploy",
    "build:services": "NODE_ENV=${NODE_ENV:-services:production} npm run commons:build",
    "watch:services": "NODE_ENV=services:development npm run commons:build -- --watch",
    "watch:services:prod": "NODE_ENV=services:production npm run commons:build -- --watch",
    "styleguide": "styleguidist server",
    "styleguide:build": "styleguidist build",
    "styleguide:deploy": "git-directory-deploy --directory ./docs/build/styleguide --branch master --repo docs",
    "drop-data": "ACH drop $( cat manifest.webapp | jq '.permissions | map(.type) | map(select(contains(\"io.cozy.bank.\"))) | join(\" \")' -rc)",
    "fixtures": "ACH import test/fixtures/demo.json test/fixtures/helpers/index.js",
    "secrets:decrypt": "openssl aes-256-cbc -K $ENCRYPTED_KEY -iv $ENCRYPTED_IV -in ./scripts/encrypted.tar.gz.enc -d | tar zxv -C scripts",
    "secrets:encrypt": "tar zcvf ./scripts/decrypted.tar.gz ./scripts/decrypted && travis encrypt-file ./scripts/decrypted.tar.gz ./scripts/encrypted.tar.gz.enc -p",
    "release": "./scripts/release.sh",
    "service": "BABEL_ENV=cli babel-node --ignore /some-fake-path src/services/cli.js",
    "service:autogroups": "BABEL_ENV=cli babel-node --ignore /some-fake-path src/targets/services/autogroups.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cozy/cozy-banks.git"
  },
  "author": "Cozy Cloud <contact@cozycloud.cc> (https://cozy.io/)",
  "contributors": [],
  "license": "AGPL-3.0",
  "bugs": {
    "url": "https://github.com/cozy/cozy-banks/issues"
  },
  "homepage": "https://github.com/cozy/cozy-banks#readme",
  "devDependencies": {
    "@babel/cli": "^7.10.0",
    "@babel/node": "^7.8.7",
    "@babel/plugin-proposal-optional-chaining": "7.12.7",
    "@babel/polyfill": "7.6.0",
    "@testing-library/react": "^9.4.0",
    "@welldone-software/why-did-you-render": "^6.1.2",
    "babel-plugin-date-fns": "0.2.1",
    "babel-plugin-inline-import": "^3.0.0",
    "babel-plugin-lodash": "3.3.4",
    "babel-plugin-module-resolver": "^3.2.0",
    "bundlemon": "^1.3.1",
    "commitlint-config-cozy": "0.4.0",
    "copy-webpack-plugin": "5.0.4",
    "cozy-app-publish": "0.27.2",
    "cozy-jobs-cli": "1.9.13",
    "dummy-json": "2.0.0",
    "duplicate-package-checker-webpack-plugin": "3.0.0",
    "enzyme": "3.11.0",
    "enzyme-adapter-react-16": "1.14.0",
    "enzyme-to-json": "3.6.1",
    "eslint_d": "^12.2.0",
    "expose-loader": "0.7.5",
    "express": "4.17.1",
    "faker": "^5.5.3",
    "file-loader": "4.2.0",
    "full-icu": "^1.4.0",
    "git-directory-deploy": "1.5.1",
    "glob": "7.1.4",
    "handlebars-layouts": "3.1.4",
    "html-webpack-harddisk-plugin": "1.0.1",
    "html-webpack-plugin": "4.0.0-beta.5",
    "husky": "3.0.7",
    "identity-obj-proxy": "3.0.0",
    "imports-loader": "0.8.0",
    "intersection-observer": "^0.12.0",
    "jest": "26.6.3",
    "jest-localstorage-mock": "2.4.0",
    "lint-staged": "9.2.5",
    "madge": "^5.0.1",
    "mailhog": "4.7.0",
    "mockdate": "2.0.5",
    "module-alias": "^2.2.2",
    "moment-locales-webpack-plugin": "1.1.0",
    "npm-run-all": "4.1.5",
    "null-loader": "3.0.0",
    "pretty": "2.0.0",
    "prop-types": "15.7.2",
    "raw-loader": "3.1.0",
    "react-addons-test-utils": "16.0.0-alpha.3",
    "react-styleguidist": "8.0.6",
    "react-test-renderer": "16.9.0",
    "shebang-loader": "0.0.1",
    "splashicon-generator": "0.2.12",
    "stylint": "2.0.0",
    "universal-url": "2.0.0",
    "webpack-cli": "3.3.9",
    "webpack-merge": "4.2.2",
    "wtfnode": "^0.8.0",
    "yarnhook": "0.4.3"
  },
  "dependencies": {
    "@babel/core": "7.9.0",
    "@cozy/minilog": "^1.0.0",
    "@material-ui/styles": "^4.10.0",
    "@testing-library/react-hooks": "^3.4.2",
    "@types/classnames": "^2.3.1",
    "bluebird": "3.5.5",
    "chart.js": "2.9.4",
    "classificator": "0.3.3",
    "classnames": "2.2.6",
    "cordova": "7.1.0",
    "cozy-authentication": "2.1.0",
    "cozy-bar": "8.10.0",
    "cozy-ci": "0.4.1",
    "cozy-client": "33.2.0",
    "cozy-client-js": "0.16.4",
    "cozy-device-helper": "^2.1.0",
    "cozy-doctypes": "1.82.2",
    "cozy-flags": "^2.8.7",
    "cozy-harvest-lib": "^9.32.2",
    "cozy-intent": "^1.17.1",
    "cozy-interapp": "0.6.2",
    "cozy-keys-lib": "3.8.0",
    "cozy-konnector-libs": "4.44.0",
    "cozy-logger": "^1.9.0",
    "cozy-notifications": "0.12.0",
    "cozy-pouch-link": "33.2.0",
    "cozy-realtime": "4.2.9",
    "cozy-scripts": "6.3.0",
    "cozy-sharing": "3.12.2",
    "cozy-stack-client": "33.2.0",
    "cozy-ui": "^75.4.0",
    "d3": "5.11.0",
    "date-fns": "1.30.1",
    "detect-node": "2.0.4",
    "diacritics": "^1.3.0",
    "element-scroll-polyfill": "1.0.1",
    "eslint-config-cozy-app": "^4.0.0",
    "fastclick": "^1.0.6",
    "fuse.js": "^6.4.2",
    "geco": "0.11.1",
    "hammerjs": "2.0.8",
    "ios-sim": "8.0.2",
    "localforage": "1.7.3",
    "lodash": "4.17.21",
    "matomo-tracker": "2.2.1",
    "moment": "2.29.4",
    "moment-timezone": "0.5.35",
    "node-polyglot": "2.3.1",
    "number-to-locale-string": "1.2.0",
    "piwik-react-router": "0.12.1",
    "pouchdb-adapter-cordova-sqlite": "2.0.5",
    "pouchdb-adapter-idb": "7.2.2",
    "pouchdb-adapter-indexeddb": "7.2.2",
    "raven-js": "3.27.2",
    "react": "16.9.0",
    "react-chartjs-2": "2.7.6",
    "react-dom": "16.9.0",
    "react-fastclick": "^3.0.2",
    "react-hint": "3.2.0",
    "react-inspector": "^5.1.0",
    "react-markdown": "4.2.2",
    "react-redux": "7.2.0",
    "react-router": "3.2.4",
    "react-side-effect": "2.1.0",
    "react-swipeable-views": "0.13.9",
    "redux": "4",
    "redux-logger": "3.0.6",
    "redux-raven-middleware": "1.2.0",
    "redux-thunk": "2.3.0",
    "reselect": "4.1.5",
    "timezone": "1.0.22",
    "velocity-animate": "1.5.2",
    "whatwg-fetch": "3.0.0"
  },
  "commitlint": {
    "extends": [
      "cozy"
    ]
  },
  "optionalDependencies": {
    "xsltproc": "0.0.4"
  },
  "_moduleDirectories": [
    "src"
  ],
  "_moduleAliases": {
    "cozy-ui/transpiled/react/utils/color": "src/ducks/notifications/noop"
  }
}
